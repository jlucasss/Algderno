/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
    id "org.javamodularity.moduleplugin" version "1.8.10"

}

version = "0.0.1"

repositories {

    flatDir {
        dirs "libs"
    }

    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {

    implementation ':jsubmeter-0.0.3:'

    implementation 'org.json:json:20211205'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

}

javafx {

    version = '17.0.1'
    modules = [ 'javafx.base', 'javafx.controls', 'javafx.fxml' ]

}

application {

    mainModule.set('com.algderno')
    // Define the main class for the application.
    mainClass.set('com.algderno.App')

}


tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

/* JAR */

project.configurations.implementation.setCanBeResolved(true)

jar{
    manifest {
        attributes("Implementation-Title": "Gradle",
                "Implementation-Version": archiveVersion,
                "Main-Class": "com.algderno.App",                
                "Class-Path":  configurations.implementation.collect { it.name }.join(' ')              
        )
    }
    dependsOn ('dependencies')
}

/* JLINK and JPACKAGE */

ext.os = org.gradle.internal.os.OperatingSystem.current()

jlink {

    imageZip = file("$buildDir/image-zip/Algderno.zip")

    options = ['--bind-services', '--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']

    launcher {
        name = 'Algderno'
        noConsole = true
    }

    jpackage {

        icon = "build/resources/main/com/algderno/images/symbol.ico"

        if(os.windows) {
            installerOptions = ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
        }
    }

}


